{"version":3,"sources":["logo.svg","CONST.js","Toolbar.jsx","Main.jsx","DataReducer.jsx","Api.js","Cell.jsx","Realization.jsx","TestCase.jsx","TechTask.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AppRoute","ReducerActionRouter","Toolbar","className","to","Main","DataContext","React","createContext","initialState","active","result","status","dataReducer","state","action","type","response","payload","length","arr","forEach","elem","push","id","filter","e","includes","name","sort","a","b","Object","assign","responseError","newPartResult","requestList","forAddResult","reduce","foo","newResult","concat","getAllCells","fetch","json","data","method","headers","body","JSON","stringify","Cell","props","cell","Realization","useContext","dispatch","useState","cells","setcells","info","setinfo","formRef","useRef","nameRef","cellsRef","priorityRef","signRef","useEffect","then","console","log","updateAll","evt","preventDefault","ref","htmlFor","value","required","onClick","Array","from","current","split","recUser","sign","priority","map","iterator","Date","now","Math","random","deleteAllInBD","TestCase","TechTask","App","useReducer","Provider","src","logo","alt","href","target","rel","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11a3f480.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Active = {\r\n    REALIZATION: \"REALIZATION\",\r\n    TECHTASK : `TECHTASK`,\r\n    TESTCASE: `TESTCASE`,\r\n} \r\n\r\nconst AppRoute = {\r\n    ROOT: `/`,\r\n    REALIZATION: `/realization`,\r\n    TECHTASK : `/task`,\r\n    TESTCASE: `/case`,\r\n};\r\n\r\nconst ReducerActionRouter = {\r\n    SWITCHPAGE : `SWITCHPAGE`,\r\n    SENDCELLS: `SENDCELLS`, \r\n    ERROR: `ERROR`, \r\n    GETALLCELLS: `GETALLCELLS`, \r\n}\r\n\r\nexport {\r\n    ReducerActionRouter,\r\n    AppRoute,\r\n    Active\r\n\r\n};","import { AppRoute } from \"./CONST.js\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Toolbar( ) {\r\n\r\n    return (\r\n\r\n        <div className=\"toolbar\">\r\n\r\n            <Link className=\"toolbar-link\" to={AppRoute.REALIZATION}>\r\n                <h2>- Реализация </h2>\r\n            </Link> \r\n            <Link className=\"toolbar-link\" to={AppRoute.TECHTASK}>\r\n                <h2>- Тех. задание </h2>\r\n            </Link>\r\n             <Link className=\"toolbar-link\" to={AppRoute.TESTCASE}>\r\n                <h2>- Test case </h2>\r\n            </Link>\r\n \r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport Toolbar from \"./Toolbar.jsx\"\r\n\r\n\r\nfunction Main() {\r\n \r\n    return (\r\n        <div className=\"main\">\r\n            <Toolbar\r\n        \r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { ReducerActionRouter, Active } from \"./CONST.js\"\r\n\r\nconst DataContext = React.createContext(\"cells\");\r\nconst initialState = {\r\n    active: Active.REALIZATION,\r\n    result: [],\r\n    status: \"\"\r\n};\r\n\r\n\r\nconst dataReducer = (state, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ReducerActionRouter.GETALLCELLS:\r\n            const response = action.payload;\r\n\r\n            if (response.length < 9) {\r\n                let arr = []\r\n                response.forEach((elem) => {\r\n                    arr.push(elem.id)\r\n                })\r\n                const foo = [0,1, 2, 3, 4, 5, 6, 7, 8, 9].filter(e => {\r\n                    return !arr.includes(e)\r\n                });\r\n                foo.forEach((elem) => {\r\n                    response.push({\r\n                        id: elem,\r\n                        name: \"\"\r\n                    })\r\n                })\r\n            }\r\n            response.sort((a, b) => {\r\n                return a.id - b.id\r\n            })\r\n            return Object.assign({}, state, {\r\n                result: response,\r\n                status:\"\"\r\n            })\r\n\r\n        case ReducerActionRouter.ERROR:\r\n            const responseError = action.payload;\r\n\r\n            return Object.assign({}, state, {\r\n                status: responseError\r\n            })\r\n        // а нужен ли вообще расчет на клиенте ?\r\n        case ReducerActionRouter.SENDCELLS:\r\n            const newPartResult = action.payload;\r\n            const requestList = newPartResult.requestList;\r\n            const forAddResult = requestList.reduce(\r\n                function (result, id) {\r\n                    const foo = {\r\n                        id: id,\r\n                        name: newPartResult.name\r\n                    }\r\n                    result.push(foo)\r\n                    return result\r\n                }, []\r\n            )\r\n            const oldResult = [].concat(state.result);\r\n            const newResult = oldResult.filter(e => {\r\n                return !requestList.includes(e.id)\r\n            });\r\n            newResult.push(...forAddResult)\r\n            newResult.sort((a, b) => {\r\n                return a.id - b.id\r\n            }\r\n            );\r\n            return Object.assign({}, state, {\r\n                result: newResult,\r\n                status: \"\"\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport {\r\n    dataReducer,\r\n    initialState,\r\n    DataContext\r\n};","//  TODO сделать Енумы на `/api/get` и другие\r\n//  TODO добавить типизацию ??\r\nasync function getAllCells() {\r\n\r\n    const response = await fetch('/api/get');\r\n    return await response.json();\r\n}\r\n\r\nasync function recUser(data) {\r\n    const response = await fetch(`/api/rec`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n \r\n        return await response.json();\r\n     \r\n}\r\n\r\nasync function deleteAllInBD(data) {\r\n    const response = await fetch(`/api/clear`, {\r\n        method: \"POST\"    \r\n    })\r\n        return await response.json();\r\n     \r\n}\r\n\r\nexport {\r\n    getAllCells,\r\n    recUser,\r\n    deleteAllInBD\r\n}","\r\n\r\n\r\nfunction Cell(props) {\r\n    const {cell } = props;\r\n    const { id, name } = cell;\r\n    return (\r\n        <li className=\"cell\">\r\n            <div className=\"cell_id\">{id} </div>\r\n            <div className=\"cell_name\">{name} </div>\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport default Cell;","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { DataContext } from \"./DataReducer\"\r\n\r\nimport { getAllCells, recUser, deleteAllInBD } from \"./Api.js\"\r\nimport Cell from \"./Cell.jsx\"\r\nimport './Realization.css';\r\nimport { ReducerActionRouter } from \"./CONST.js\"\r\n\r\nconst Realization = () => {\r\n    const { state, dispatch } = useContext(DataContext);\r\n\r\n    let [cells, setcells] = useState([]);\r\n    let [info, setinfo] = useState(\"Realization\");\r\n    let formRef = useRef(null);\r\n    let nameRef = useRef(null);\r\n    let cellsRef = useRef(null);\r\n    const priorityRef = useRef(\"NORMAL\");\r\n    const signRef = useRef(\"+\");\r\n    useEffect(() => {\r\n        getAllCells()\r\n            .then(data => {\r\n                console.log(data)\r\n                dispatch({\r\n                    type: ReducerActionRouter.GETALLCELLS,\r\n                    payload: data\r\n                })\r\n\r\n            })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setcells(state.result)\r\n    }, [state.result]);\r\n\r\n    useEffect(() => {\r\n        setinfo(state.status.info)\r\n    }, [state.status]);\r\n\r\n    const updateAll = (evt) => {\r\n        if (evt) {\r\n            evt.preventDefault();\r\n        }\r\n        getAllCells()\r\n            .then(data => {\r\n                console.log(data)\r\n                dispatch({\r\n                    type: ReducerActionRouter.GETALLCELLS,\r\n                    payload: data\r\n                })\r\n\r\n            })\r\n    }\r\n\r\n    const sendCells = (evt) => {\r\n        evt.preventDefault();\r\n        console.log(\"SendCells \")\r\n        const requestList = Array.from(cellsRef.current.value.split(\",\"));\r\n\r\n        const userRequest = {\r\n            sign: signRef.current.value,\r\n            name: nameRef.current.value,\r\n            requestList: requestList,\r\n            priority: priorityRef.current.value\r\n        }\r\n\r\n        recUser(userRequest).then(\r\n            (data) => {\r\n                if (data.info) {\r\n                    dispatch({\r\n                        type: ReducerActionRouter.ERROR,\r\n                        payload: data\r\n                    })\r\n                }\r\n                else {\r\n                    updateAll()\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const _handleReset = () => {\r\n        formRef = null\r\n    }\r\n\r\n    const clearH2Bd = () => {\r\n        deleteAllInBD().then(data => {\r\n            dispatch({\r\n                type: ReducerActionRouter.GETALLCELLS,\r\n                payload: data\r\n            })\r\n\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"realization\">\r\n            <form className=\"realization-form\" ref={formRef}>\r\n                <fieldset className=\"ad-form__element\">\r\n                    <label className=\"ad-form__label\" htmlFor=\"sign\">Знак</label>\r\n                    <select id=\"sign\" name=\"sign\" ref={signRef}>\r\n                        <option value=\"+\">+</option>\r\n                        <option value=\"-\">-</option>\r\n                    </select>\r\n                </fieldset>\r\n                <fieldset className=\"realization-form__element\">\r\n                    <label className=\"realization-form__label\" htmlFor=\"users\">Имя</label>\r\n                    <input id=\"users\" name=\"users\" type=\"text\" required ref={nameRef} />\r\n                </fieldset>\r\n                <fieldset className=\"realization-form__element\">\r\n                    <label className=\"realization-form__label\" htmlFor=\"cells\">Места через запятую</label>\r\n                    <input id=\"cells\" name=\"cells\" type=\"text\" required ref={cellsRef} />\r\n                </fieldset>\r\n                <fieldset className=\"ad-form__element\">\r\n                    <label className=\"ad-form__label\" htmlFor=\"priority\">Приоритет</label>\r\n                    <select id=\"priority\" name=\"priority\" ref={priorityRef}>\r\n                        <option value=\"NORMAL\">NORMAL</option>\r\n                        <option value=\"LOWPRIO\">LOWPRIO</option>\r\n                    </select>\r\n                </fieldset>\r\n\r\n                <fieldset className=\"realization-form__element realization-form__element--submit\">\r\n                    <button className=\"ad-form__submit\" type=\"submit\" onClick={sendCells}>Отправить</button>\r\n                    или <button className=\"ad-form__reset\" type=\"reset\" onClick={_handleReset}>Очистить форму</button>\r\n                </fieldset>\r\n            </form>\r\n\r\n            <h1>{info}</h1>\r\n            <button className=\"update_button\" onClick={updateAll}> Обновить  </button>\r\n            <ul className=\"cell_list\">\r\n                {cells.map(\r\n                    (iterator) => {\r\n                        return (\r\n                            <Cell\r\n                                cell={iterator}\r\n                                key={Date.now() + iterator.name + Math.random()}\r\n                            />\r\n                        );\r\n                    })}\r\n            </ul>\r\n\r\n            <button className=\"ad-form__clear\" type=\"submit\" onClick={clearH2Bd}>Удалить значения из H2 БД</button>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Realization;","\r\nfunction TestCase( ) {\r\n \r\n        return (\r\n            <div className=\"test\">\r\n\r\n            <h1>TESTCASE</h1>\r\n            <p>Добавить</p>\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\nexport default TestCase;","\r\nfunction TechTask() {\r\n\r\n    return (\r\n        <div className=\"tech\">\r\n            <h1>TechTask</h1>\r\n            <p>\r\n                Задача коллективного владения\r\n                Цель соискателя: предложить и реализовать алгоритм\r\n\r\n                Смысл задачи: имеется N объектов и M субъектов, M может быть как больше, равно,\r\n                так и меньше N. Каждый субъект может быть способным владеть некоторым\r\n                подмножеством из N (например N1, N2, N3) - SN. Каждый субъект в некоторый\r\n                момент времени может владеть некоторыми объектами из своего подмножества SN.\r\n                В каждый момент времени одним объектом может владеть только один субъект.\r\n                Задача заключается в том, чтобы максимально справедливо распределять владение\r\n                объектами между субъектами в соответствии со следующими ограничениями:\r\n\r\n                1. Субъекты могут добавляться и удаляться из системы по одному за одно\r\n                решение задачи распределения (то есть гарантируется что в процессе решения\r\n                задачи агенты не будут удаляться и добавляться)\r\n                2. Субъект может быть владельцем только тех объектов, которые находятся в\r\n                подмножестве его допустимых объектов\r\n                3. Распределение должно быть справедливым и стремиться к равномерному\r\n                распределению среди субъектов\r\n                4. Распределение должно быть устойчивым, то есть при добавлении или удалении\r\n                субъекта не должен происходить сброс состояния и полный перерасчет, а\r\n                должно производиться снятие владения и назначение владения в соответствии\r\n                с новой диспозицией.\r\n                5. Должна быть возможность для некоторого субъекта (при инициализации) задать\r\n                параметр, который будет позволять ему становиться владельцем только в том\r\n                случае, если нет других кандидатов (то есть субъект должен избегать\r\n                становиться владельцем).\r\n                6. Объект может находиться без владения кем-то только в том случае, если нет\r\n                субъекта, в чьем подмножестве допустимого владения присутствует данный\r\n                объект.\r\n                7. Если субъект имеет приоритет LOWPRIO, то он становится владельцем, только\r\n                в том случае, если нет владельца нормального приоритета и передает\r\n                владение при появлении владельца нормального приоритета.\r\n\r\n                Как выполнить задание:\r\n                1. правильное использование ООП или ФП (если выбран ФЯ)\r\n                2. реализовать с использованием стандартных паттернов проектирования\r\n                3. реализовать unit-test-ы для покрытия всего кода (стандартный пакет для\r\n                выбранного ЯП)\r\n                4. реализовать интеграционный тест на пример (стандартный пакет для\r\n                выбранного ЯП)\r\n                5. встроенная в язык документация (например, scaladoc для scala)\r\n                6. понятные, лексически и семантически корректные имена объектов, функций,\r\n                переменных\r\n                7. Main не нужен\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TechTask;","import logo from './logo.svg';\nimport './App.css';\nimport Main from \"./Main.jsx\"\nimport { AppRoute } from \"./CONST.js\"\nimport Realization from \"./Realization.jsx\"\nimport TestCase from \"./TestCase.jsx\"\nimport TechTask from \"./TechTask.jsx\"\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\n import React, { useReducer } from 'react';\n\nimport { DataContext, initialState, dataReducer } from \"./DataReducer\"\n\nfunction App() {\n  const [state, dispatch] = useReducer(dataReducer, initialState);\n\n  return (\n    <DataContext.Provider value={{ dispatch, state }}>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <a\n          className=\"App-link\"\n          href=\"/\"\n        >\n          <h1>\n            Задача коллективного владения\n          </h1>\n        </a>\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/Egor18032019/testovoeBitWorks\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Репозиторий\n        </a>\n      </header>\n      <main>\n        <BrowserRouter>\n          <Routes>\n            <Route path={AppRoute.ROOT} element={<Main />} />\n            <Route path={AppRoute.REALIZATION} element={<Realization />} />\n            <Route path={AppRoute.TECHTASK} element={<TestCase />} />\n            <Route path={AppRoute.TESTCASE} element={<TechTask />} />\n          </Routes>\n        </BrowserRouter>\n      </main>\n    </div >\n    </DataContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}